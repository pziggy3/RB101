NUMBER_TO_WORD = {
  "zero" => 0, "one" => 1, "two" => 2, "three" => 3, "four" => 4, "five" => 5, 
  "six" => 6, "seven" => 7, "eight" => 8, "nine" => 9, "ten" => 10, "eleven" => 11,
  "twelve" => 12, "thirteen" => 13, "fourteen" => 14, "fifteen" => 15, 
  "sixteen" => 16, "seventeen" => 17, "eighteen" => 18, "nineteen" => 19
}
NUMBER_TO_WORD2 = %w(zero one two three four five six seven eight nine ten eleven twelve thirteen fourteen fifteen sixteen seventeen eighteen nineteen)

def alphabetic_number_sort(array)
  new_array = NUMBER_TO_WORD2[array[0]..array[-1]].sort
  new_array.map { |item| NUMBER_TO_WORD[item] }
end

p alphabetic_number_sort((0..19).to_a)


# Launch School solution - BETTER
NUMBER_WORDS = %w(zero one two three four
  five six seven eight nine
  ten eleven twelve thirteen fourteen
  fifteen sixteen seventeen eighteen nineteen)

def alphabetic_number_sort2(numbers)
  numbers.sort_by { |number| NUMBER_WORDS[number] }
end

p alphabetic_number_sort2((0..19).to_a)


"""
'sort_by { |obj| block } â†’ array
Sorts enum using a set of keys generated by mapping the values in enum through the given block.'
"""